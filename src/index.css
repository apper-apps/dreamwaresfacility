@import 'react-toastify/dist/ReactToastify.css';
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  * {
    box-sizing: border-box;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    font-family: 'Inter', sans-serif;
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}

@layer components {
  .btn-primary {
    @apply bg-gradient-to-r from-primary to-accent text-white px-8 py-3 rounded-lg font-semibold shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-200 ease-out;
  }
  
  .btn-secondary {
    @apply bg-white text-primary border-2 border-primary px-8 py-3 rounded-lg font-semibold hover:bg-primary hover:text-white transition-all duration-200 ease-out;
  }

  .section-container {
    @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;
  }

  .gradient-text {
    @apply bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent;
  }

  .card-hover {
    @apply transform hover:scale-[1.02] hover:-translate-y-1 transition-all duration-300 ease-out;
  }
}

/* Toast customization */
.Toastify__toast-container {
  z-index: 9999;
}

.Toastify__toast {
  font-family: 'Inter', sans-serif;
  border-radius: 8px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

.Toastify__toast--success {
  background: linear-gradient(135deg, #10B981, #059669);
}

.Toastify__toast--error {
  background: linear-gradient(135deg, #EF4444, #DC2626);
}

.Toastify__toast--info {
  background: linear-gradient(135deg, #06B6D4, #0891B2);
}

.Toastify__progress-bar {
  background: rgba(255, 255, 255, 0.8);
}

/* Performance optimizations */
@layer utilities {
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  
  .will-change-transform {
    will-change: transform;
  }
  
  .will-change-opacity {
    will-change: opacity;
  }
  
  .gpu-accelerated {
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000;
  }
}

/* Skeleton loading animations */
@layer components {
  .skeleton-shimmer {
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
  }
  
  .skeleton-text {
    @apply bg-gray-200 rounded animate-pulse;
    height: 1em;
  }
  
  .skeleton-avatar {
    @apply bg-gray-200 rounded-full animate-pulse;
  }
  
  .skeleton-card {
    @apply bg-gray-100 rounded-lg p-4 animate-pulse;
  }
}

/* Scroll-triggered animations */
@layer utilities {
  .animate-fade-in-up {
    animation: fadeInUp 0.8s ease-out forwards;
    opacity: 0;
    transform: translateY(30px);
  }
  
  .animate-fade-in-left {
    animation: fadeInLeft 0.8s ease-out forwards;
    opacity: 0;
    transform: translateX(-30px);
  }
  
  .animate-fade-in-right {
    animation: fadeInRight 0.8s ease-out forwards;
    opacity: 0;
    transform: translateX(30px);
  }
  
  .animate-scale-in {
    animation: scaleIn 0.6s ease-out forwards;
    opacity: 0;
    transform: scale(0.9);
  }
  
  .stagger-1 { animation-delay: 0.1s; }
  .stagger-2 { animation-delay: 0.2s; }
  .stagger-3 { animation-delay: 0.3s; }
  .stagger-4 { animation-delay: 0.4s; }
  .stagger-5 { animation-delay: 0.5s; }
}

@keyframes shimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Smooth focus transitions */
@layer base {
  *:focus {
    transition: all 0.2s ease-in-out;
  }
  
  /* Optimize animations for reduced motion */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
}

/* Image optimization */
@layer utilities {
  .aspect-video {
    aspect-ratio: 16 / 9;
  }
  
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  
  .aspect-4-3 {
    aspect-ratio: 4 / 3;
  }
  
  .object-cover {
    object-fit: cover;
  }
  
  .object-contain {
    object-fit: contain;
  }
}